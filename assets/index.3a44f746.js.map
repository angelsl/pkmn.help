{"version":3,"file":"index.3a44f746.js","sources":["../../src/data.ts","../../src/PercentBar.tsx","../../src/DexCoverage.tsx","../../src/cssType.ts","../../src/Matchups.tsx","../../src/TypeSelector.tsx","../../src/useSearch.tsx","../../src/ScreenDefense.tsx","../../src/useScrollToFragment.ts","../../src/ScreenInfo.tsx","../../src/MultiTypeSelector.tsx","../../src/ScreenOffense.tsx","../../src/settings.ts","../../src/LinkButton.tsx","../../src/Paginator.tsx","../../src/pickTranslation.ts","../../src/Search.tsx","../../src/StatBar.tsx","../../src/StatsTable.tsx","../../src/ScreenPokedex.tsx","../../src/getImage.ts","../../src/ScreenPokedexHelp.tsx","../../src/ScreenWeaknessCoverage.tsx","../../src/saveFile.tsx","../../src/pickFile.ts","../../src/App.tsx","../../src/ErrorBoundary.tsx","../../src/ScreenError.tsx","../../src/main.tsx"],"sourcesContent":["import { closest } from \"fastest-levenshtein\";\n\nexport interface Pokemon {\n  id: string;\n  name: string;\n  speciesNames: Record<string, string>;\n  formNames: Record<string, string>;\n  number: number;\n  types: Type[];\n  hp: number;\n  attack: number;\n  defense: number;\n  spAttack: number;\n  spDefense: number;\n  speed: number;\n  bulbapediaURL: string;\n}\n\nexport enum Type {\n  NORMAL = \"normal\",\n  FIGHTING = \"fighting\",\n  FLYING = \"flying\",\n  POISON = \"poison\",\n  GROUND = \"ground\",\n  ROCK = \"rock\",\n  BUG = \"bug\",\n  GHOST = \"ghost\",\n  STEEL = \"steel\",\n  FIRE = \"fire\",\n  WATER = \"water\",\n  GRASS = \"grass\",\n  ELECTRIC = \"electric\",\n  PSYCHIC = \"psychic\",\n  ICE = \"ice\",\n  DRAGON = \"dragon\",\n  DARK = \"dark\",\n  FAIRY = \"fairy\",\n  NONE = \"none\",\n}\n\nfunction isType(str: string): str is Type {\n  return types.some((t) => t === str);\n}\n\nexport function typesFromString(str: string): Type[] {\n  return str.split(/\\s+/).filter(isType);\n}\n\nfunction isTypeOrNone(str: string): str is Type {\n  return typesOrNone.some((t) => t === str);\n}\n\nexport function typesOrNoneFromString(str: string): Type[] {\n  return str.split(/\\s+/).filter(isTypeOrNone);\n}\n\nexport const types = [\n  Type.NORMAL,\n  Type.FIGHTING,\n  Type.FLYING,\n  Type.POISON,\n  Type.GROUND,\n  Type.ROCK,\n  Type.BUG,\n  Type.GHOST,\n  Type.STEEL,\n  Type.FIRE,\n  Type.WATER,\n  Type.GRASS,\n  Type.ELECTRIC,\n  Type.PSYCHIC,\n  Type.ICE,\n  Type.DRAGON,\n  Type.DARK,\n  Type.FAIRY,\n];\n\nexport const typesOrNone = [...types, Type.NONE];\n\nexport function stringToType(string: string, fallback: Type): Type {\n  string = string.toLowerCase().replace(/[^a-z]/, \"\");\n  if (string === \"\") {\n    return fallback;\n  }\n  return closest(string, typesOrNone) as Type;\n}\n\nexport enum Effectiveness {\n  QUADRUPLE = 4,\n  DOUBLE = 2,\n  REGULAR = 1,\n  HALF = 0.5,\n  QUARTER = 0.25,\n  ZERO = 0,\n}\n\nconst rawData = [\n  [1, 1, 1, 1, 1, 0.5, 1, 0, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [2, 1, 0.5, 0.5, 1, 2, 0.5, 0, 2, 1, 1, 1, 1, 0.5, 2, 1, 2, 0.5],\n  [1, 2, 1, 1, 1, 0.5, 2, 1, 0.5, 1, 1, 2, 0.5, 1, 1, 1, 1, 1],\n  [1, 1, 1, 0.5, 0.5, 0.5, 1, 0.5, 0, 1, 1, 2, 1, 1, 1, 1, 1, 2],\n  [1, 1, 0, 2, 1, 2, 0.5, 1, 2, 2, 1, 0.5, 2, 1, 1, 1, 1, 1],\n  [1, 0.5, 2, 1, 0.5, 1, 2, 1, 0.5, 2, 1, 1, 1, 1, 2, 1, 1, 1],\n  [1, 0.5, 0.5, 0.5, 1, 1, 1, 0.5, 0.5, 0.5, 1, 2, 1, 2, 1, 1, 2, 0.5],\n  [0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 0.5, 1],\n  [1, 1, 1, 1, 1, 2, 1, 1, 0.5, 0.5, 0.5, 1, 0.5, 1, 2, 1, 1, 2],\n  [1, 1, 1, 1, 1, 0.5, 2, 1, 2, 0.5, 0.5, 2, 1, 1, 2, 0.5, 1, 1],\n  [1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 0.5, 0.5, 1, 1, 1, 0.5, 1, 1],\n  [1, 1, 0.5, 0.5, 2, 2, 0.5, 1, 0.5, 0.5, 2, 0.5, 1, 1, 1, 0.5, 1, 1],\n  [1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 2, 0.5, 0.5, 1, 1, 0.5, 1, 1],\n  [1, 2, 1, 2, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 0.5, 1, 1, 0, 1],\n  [1, 1, 2, 1, 2, 1, 1, 1, 0.5, 0.5, 0.5, 2, 1, 1, 0.5, 2, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 2, 1, 0],\n  [1, 0.5, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 0.5, 0.5],\n  [1, 2, 1, 0.5, 1, 1, 1, 1, 0.5, 0.5, 1, 1, 1, 1, 1, 2, 2, 1],\n];\n\nfunction keyForTypes(t1: Type, t2: Type) {\n  return t1 + \" ~ \" + t2;\n}\n\nexport interface CoverageType {\n  number: string;\n  name: string;\n  type1: Type;\n  type2: Type;\n}\n\nexport function objectToCoverageType(obj: unknown): CoverageType {\n  const ct = obj as Partial<CoverageType>;\n  return {\n    number: ct.number || \"\",\n    name: ct.name || \"\",\n    type1: stringToType(ct.type1 || \"\", Type.NORMAL),\n    type2: stringToType(ct.type2 || \"\", Type.NONE),\n  };\n}\n\nconst pairs = rawData.flatMap((row, i) => {\n  return row.map<[string, number]>((data, j) => {\n    return [keyForTypes(types[i], types[j]), data];\n  });\n});\n\nconst table = Object.fromEntries(pairs);\n\nexport function matchupFor(ta1: Type, ta2: Type, tb: Type) {\n  const x1 = table[keyForTypes(tb, ta1)];\n  // Don't allow bogus type combinations, such as Fire/Fire or Fire/None\n  const x2 = ta1 !== ta2 && ta2 !== Type.NONE ? table[keyForTypes(tb, ta2)] : 1;\n  const x3 = x1 * x2;\n  if (x3 === 4) {\n    return Effectiveness.QUADRUPLE;\n  }\n  if (x3 === 2) {\n    return Effectiveness.DOUBLE;\n  }\n  if (x3 === 1) {\n    return Effectiveness.REGULAR;\n  }\n  if (x3 === 0.5) {\n    return Effectiveness.HALF;\n  }\n  if (x3 === 0.25) {\n    return Effectiveness.QUARTER;\n  }\n  if (x3 === 0) {\n    return Effectiveness.ZERO;\n  }\n  throw new Error();\n}\n\nexport class Matchup {\n  constructor(public type: Type, public effectiveness: Effectiveness) {}\n}\n\nexport class GroupedMatchups {\n  constructor(public matchups: Matchup[]) {}\n\n  typesFor(effectivenes: Effectiveness): Type[] {\n    return this.matchups\n      .filter((m) => m.effectiveness === effectivenes)\n      .map((m) => m.type);\n  }\n}\n\nexport function offensiveMatchups(offenseTypes: Type[]) {\n  const matchups = types.map((t) => {\n    if (offenseTypes.length === 0) {\n      return new Matchup(t, Effectiveness.REGULAR);\n    }\n    const effs = offenseTypes.map((offense) => {\n      return matchupFor(t, Type.NONE, offense);\n    });\n    const max = Math.max(...effs);\n    return new Matchup(t, max);\n  });\n  return new GroupedMatchups(matchups);\n}\n\nexport function defensiveMatchups(t1: Type, t2: Type) {\n  const matchups = types.map((t) => {\n    const eff = matchupFor(t1, t2, t);\n    return new Matchup(t, eff);\n  });\n  return new GroupedMatchups(matchups);\n}\n","import * as React from \"react\";\n\nexport interface PercentBarProps {\n  value: number;\n  max: number;\n}\n\nexport function PercentBar({ value, max }: PercentBarProps) {\n  return (\n    <div className=\"flex h1 w-100 Bar-Container\">\n      <div\n        style={{\n          width: (value / max) * 100 + \"%\",\n          background: \"var(--color-fg3)\",\n        }}\n        className=\"Bar-Fill\"\n      ></div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { CoverageType, Effectiveness, matchupFor, Type } from \"./data\";\nimport { PercentBar } from \"./PercentBar\";\n\ninterface DexCoverageProps {\n  coverageTypes: CoverageType[];\n  types: Type[];\n  isLoading: boolean;\n}\n\nconst DexCoverage: React.FC<DexCoverageProps> = ({\n  coverageTypes,\n  types,\n  isLoading,\n}) => {\n  const count = coverageTypes.filter(({ type1, type2 }) => {\n    const matchups = types.map((t) => matchupFor(type1, type2, t));\n    return matchups.some((effectiveness) => {\n      return effectiveness > Effectiveness.REGULAR;\n    });\n  }).length;\n  const total = coverageTypes.length;\n  const ratio = count / total || 0;\n  const percent = (ratio * 100).toFixed(0);\n  return (\n    <div className=\"pt1 tabular-nums flex flex-column lh-copy\">\n      <PercentBar value={count} max={total} />\n      <div className=\"flex items-center\">\n        {isLoading ? (\n          <div className=\"flex-auto tc\">Loading...</div>\n        ) : (\n          <>\n            <div className=\"tl mr2 w3\">{percent}%</div>\n            <div className=\"flex-auto tr\">\n              {count} / {total} forms\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DexCoverage;\n","import { Type } from \"./data\";\n\nexport function cssType(type: Type): string {\n  switch (type) {\n    case Type.FIRE:\n      return \"type-fire\";\n    case Type.WATER:\n      return \"type-water\";\n    case Type.GRASS:\n      return \"type-grass\";\n    case Type.ELECTRIC:\n      return \"type-electric\";\n    case Type.PSYCHIC:\n      return \"type-psychic\";\n    case Type.ICE:\n      return \"type-ice\";\n    case Type.DRAGON:\n      return \"type-dragon\";\n    case Type.DARK:\n      return \"type-dark\";\n    case Type.FAIRY:\n      return \"type-fairy\";\n    case Type.NORMAL:\n      return \"type-normal\";\n    case Type.FIGHTING:\n      return \"type-fighting\";\n    case Type.FLYING:\n      return \"type-flying\";\n    case Type.POISON:\n      return \"type-poison\";\n    case Type.GROUND:\n      return \"type-ground\";\n    case Type.ROCK:\n      return \"type-rock\";\n    case Type.BUG:\n      return \"type-bug\";\n    case Type.GHOST:\n      return \"type-ghost\";\n    case Type.STEEL:\n      return \"type-steel\";\n    case Type.NONE:\n      return \"type-none\";\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n","import classnames from \"classnames\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CoverageType,\n  defensiveMatchups,\n  Effectiveness,\n  GroupedMatchups,\n  offensiveMatchups,\n  Type,\n} from \"./data\";\nimport DexCoverage from \"./DexCoverage\";\nimport { cssType } from \"./cssType\";\n\ninterface BadgeProps {\n  type: Type;\n}\n\nfunction Badge({ type }: BadgeProps) {\n  return (\n    <div\n      className={classnames(\n        \"type-bg-dark\",\n        cssType(type),\n        \"ba border-vibrant\",\n        \"br2\",\n        \"ttc tc b f5 lh-title\"\n      )}\n      style={{ width: 80, margin: \"0.125rem\", padding: 2 }}\n    >\n      <div className=\"bg-black-40 br1 ba b--black-10 white\">{type}</div>\n    </div>\n  );\n}\n\ninterface SectionProps {\n  title: string;\n  types: Type[];\n}\n\nfunction Section({ title, types }: SectionProps) {\n  if (types.length === 0) {\n    return null;\n  }\n  return (\n    <div>\n      <h3 className=\"f5 mt3 mb0\">{title}</h3>\n      <div className=\"center MatchupsSection-Container\">\n        {types.map((t) => (\n          <Badge key={`type-${t}`} type={t} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface MatchupsProps {\n  coverageTypes?: CoverageType[];\n  kind: \"offense\" | \"defense\";\n  types: Type[];\n  formatTitle: (value: string) => string;\n  matchups: GroupedMatchups;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n  noId?: boolean;\n}\n\nfunction Matchups({\n  coverageTypes,\n  kind,\n  types,\n  formatTitle,\n  matchups,\n  fallbackCoverageTypes,\n  isLoading,\n  noId,\n}: MatchupsProps) {\n  return (\n    <div className=\"tc pt2\" id={noId ? undefined : `matchup-${kind}`}>\n      {kind === \"offense\" ? (\n        <div>\n          <h3 className=\"f5 mt3 mb0\">\n            Weakness Coverage{\" \"}\n            <span className=\"normal\">\n              (\n              <Link\n                to=\"/offense/coverage/\"\n                className=\"underline fg-link OutlineFocus\"\n              >\n                edit\n              </Link>\n              )\n            </span>\n          </h3>\n          <div\n            className={classnames(\n              \"pt1 center tc\",\n              isLoading && [\"o-30 no-pointer cursor-na\"]\n            )}\n          >\n            <DexCoverage\n              coverageTypes={coverageTypes ?? fallbackCoverageTypes}\n              types={types}\n              isLoading={isLoading}\n            />\n          </div>\n        </div>\n      ) : null}\n      <Section\n        title={formatTitle(\"4×\")}\n        types={matchups.typesFor(Effectiveness.QUADRUPLE)}\n      />\n      <Section\n        title={formatTitle(\"2×\")}\n        types={matchups.typesFor(Effectiveness.DOUBLE)}\n      />\n      <Section\n        title={formatTitle(\"1×\")}\n        types={matchups.typesFor(Effectiveness.REGULAR)}\n      />\n      <Section\n        title={formatTitle(\"½×\")}\n        types={matchups.typesFor(Effectiveness.HALF)}\n      />\n      <Section\n        title={formatTitle(\"¼×\")}\n        types={matchups.typesFor(Effectiveness.QUARTER)}\n      />\n      <Section\n        title={formatTitle(\"0×\")}\n        types={matchups.typesFor(Effectiveness.ZERO)}\n      />\n    </div>\n  );\n}\n\nexport interface DefenseProps {\n  type1: Type;\n  type2: Type;\n  fallbackCoverageTypes: CoverageType[];\n  noId?: boolean;\n}\n\nexport function Defense({\n  type1,\n  type2,\n  fallbackCoverageTypes,\n  noId,\n}: DefenseProps) {\n  return (\n    <Matchups\n      kind=\"defense\"\n      types={[type1, type2]}\n      formatTitle={(x) => `Takes ${x} From`}\n      matchups={defensiveMatchups(type1, type2)}\n      fallbackCoverageTypes={fallbackCoverageTypes}\n      isLoading={false}\n      noId={noId}\n    />\n  );\n}\n\nexport interface OffenseProps {\n  coverageTypes?: CoverageType[];\n  setCoverageTypes: (types: CoverageType[]) => void;\n  types: Type[];\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport function Offense({\n  coverageTypes,\n  types,\n  fallbackCoverageTypes,\n  isLoading,\n}: OffenseProps) {\n  return (\n    <Matchups\n      kind=\"offense\"\n      types={types}\n      coverageTypes={coverageTypes}\n      formatTitle={(x) => `Deals ${x} to`}\n      matchups={offensiveMatchups(types)}\n      fallbackCoverageTypes={fallbackCoverageTypes}\n      isLoading={isLoading}\n    />\n  );\n}\n","import classnames from \"classnames\";\nimport * as React from \"react\";\nimport { Type, types, typesOrNone } from \"./data\";\nimport { cssType } from \"./cssType\";\n\nconst buttonInnerHeight = \"1.5rem\";\n\ninterface TypeSelectorProps {\n  onChange(type: Type): void;\n  value: Type;\n  includeNone: boolean;\n  disabledTypes: Type[];\n}\n\nexport default function TypeSelector({\n  onChange,\n  value,\n  includeNone,\n  disabledTypes,\n}: TypeSelectorProps) {\n  const theTypes = includeNone ? typesOrNone : types;\n  const styles = {\n    disabled: \"border3 fg4 bg2 o-60 SimpleFocus\",\n    selected: \"border-vibrant2 type-bg-dark SelectedFocus\",\n    normal: \"border1 bg1 fg1 button-bg button-shadow SimpleFocus\",\n  };\n  return (\n    <div className=\"TypeSelector-Container\">\n      {theTypes.map((type) => {\n        const isDisabled = disabledTypes.includes(type);\n        const isSelected = type === value;\n        const style = isDisabled\n          ? styles.disabled\n          : isSelected\n          ? styles.selected\n          : styles.normal;\n        return (\n          <button\n            key={`type-${type}`}\n            disabled={isDisabled}\n            className={classnames(\n              style,\n              \"db w-100\",\n              \"ba br-pill\",\n              \"pv1 ph2\",\n              \"f5 b\",\n              \"ttc\",\n              \"active-squish\",\n              cssType(type)\n            )}\n            onClick={() => onChange(type)}\n          >\n            <span className=\"flex flex-row items-center justify-center\">\n              <span\n                className={classnames(\n                  cssType(type),\n                  `b--black br-pill ba`,\n                  type === value\n                    ? \"b--black type-bg-light\"\n                    : \"border-vibrant type-bg-dark\"\n                )}\n                style={{\n                  width: \"1rem\",\n                  height: \"1rem\",\n                }}\n              />\n              <span\n                className=\"tl pl2 pr1 flex-auto truncate\"\n                style={{ lineHeight: buttonInnerHeight }}\n              >\n                {type}\n              </span>\n              {isSelected ? (\n                <small aria-label=\"\"> &#9679;&nbsp;</small>\n              ) : (\n                <small />\n              )}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\n\nexport function useSearch() {\n  const location = useLocation();\n  return new URLSearchParams(location.search);\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CoverageType, Type, typesFromString } from \"./data\";\nimport * as Matchups from \"./Matchups\";\nimport TypeSelector from \"./TypeSelector\";\nimport { useScrollToFragment } from \"./useScrollToFragment\";\nimport { useSearch } from \"./useSearch\";\n\ninterface DefenseProps {\n  setDefenseParams: (params: string) => void;\n  fallbackCoverageTypes: CoverageType[];\n}\n\nexport default function ScreenDefense({\n  setDefenseParams,\n  fallbackCoverageTypes,\n}: DefenseProps) {\n  useScrollToFragment();\n\n  const search = useSearch();\n  const history = useHistory();\n\n  const [type1 = Type.NORMAL, type2 = Type.NONE] = typesFromString(\n    search.get(\"types\") || \"\"\n  );\n\n  function createParams(types: Type[]): string {\n    const params = new URLSearchParams();\n    if (types.length >= 0) {\n      if (types[1] === Type.NONE) {\n        params.set(\"types\", types[0]);\n      } else {\n        params.set(\"types\", types.join(\" \"));\n      }\n    }\n    return \"?\" + params;\n  }\n\n  function updateTypes(types: Type[]) {\n    history.replace({ search: createParams(types) });\n  }\n\n  function updateType1(t: Type) {\n    updateTypes([t, type2]);\n  }\n\n  function updateType2(t: Type) {\n    updateTypes([type1, t]);\n  }\n\n  const params = createParams([type1, type2]);\n  React.useEffect(() => {\n    setDefenseParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  const classH2 = \"tc f5 mv3\";\n  return (\n    <main className=\"ph3 pt1 pb4 content-wide center\">\n      <div className=\"dib w-50-ns w-100 v-top\">\n        <h2 className={classH2}>Choose Primary Type</h2>\n        <TypeSelector\n          value={type1}\n          onChange={updateType1}\n          disabledTypes={[]}\n          includeNone={false}\n        />\n        <h2 className={`${classH2} mt4`}>Choose Secondary Type</h2>\n        <TypeSelector\n          value={type2}\n          onChange={updateType2}\n          disabledTypes={[type1]}\n          includeNone={true}\n        />\n      </div>\n      <div className=\"dib w-50-ns w-100 v-top pl3-ns\">\n        <hr className=\"dn-ns subtle-hr mv4\" />\n        <Matchups.Defense\n          type1={type1}\n          type2={type2}\n          fallbackCoverageTypes={fallbackCoverageTypes}\n        />\n      </div>\n    </main>\n  );\n}\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function useScrollToFragment() {\n  const fragment = useLocation().hash.slice(1);\n\n  React.useLayoutEffect(() => {\n    if (!fragment) {\n      return;\n    }\n    const element = document.getElementById(fragment);\n    if (element instanceof HTMLElement) {\n      element.scrollIntoView();\n    }\n  }, [fragment]);\n}\n","import * as React from \"react\";\n\nconst year = new Date().getFullYear();\n\nexport default function ScreenInfo() {\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f4\">Contact Me</h2>\n      <p>\n        Questions, suggestions, or just want to say thank you? Email me at{\" \"}\n        <a\n          className=\"underline fg-link OutlineFocus\"\n          href=\"mailto:brian@wavebeem.com\"\n        >\n          brian@wavebeem.com\n        </a>\n        . Source code is available on{\" \"}\n        <a\n          href=\"https://github.com/wavebeem/pkmn.help\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          GitHub\n        </a>\n        .\n      </p>\n      <h2 className=\"lh-title f4\">Privacy</h2>\n      <p>\n        I will never runs ads or steal your personal data. I use{\" \"}\n        <a\n          href=\"https://plausible.io/privacy\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Plausible Analytics\n        </a>\n        , which is self-funded, independent, hosted in the EU, and doesn&apos;t\n        store any cookies on your computer.\n      </p>\n      <h2 className=\"lh-title f4\">Giving Back</h2>\n      <p>\n        I have spent countless hours improving this site. If you appreciate what\n        I&apos;ve made, please consider donating to charities that support BIPOC\n        and transgender rights.\n      </p>\n      <h2 className=\"lh-title f4\">Special Thanks</h2>\n      <ul className=\"lh-copy mt1 ph3\">\n        <li>Jansjo (testing, research)</li>\n        <li>Several anonymous Poké Fans</li>\n      </ul>\n      <h2 className=\"lh-title f4\">Legal Info</h2>\n      <p>\n        Pokémon &copy; 2002&ndash;{year} Pokémon. &copy; 1995&ndash;{year}{\" \"}\n        Nintendo/Creatures Inc./GAME FREAK inc. &trade;, &reg; and Pokémon\n        character names are trademarks of Nintendo.\n      </p>\n      <p>\n        No copyright or trademark infringement is intended in using Pokémon\n        content on this page.\n      </p>\n      <p>\n        Pokédex data from{\" \"}\n        <a\n          className=\"underline fg-link OutlineFocus\"\n          href=\"https://pokeapi.co/\"\n        >\n          PokéAPI\n        </a>\n        .\n      </p>\n      <p>\n        pkmn.help &copy; 2013&ndash;{year}{\" \"}\n        <a\n          href=\"https://www.wavebeem.com\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Brian Mock\n        </a>\n        .\n      </p>\n    </main>\n  );\n}\n","import classnames from \"classnames\";\nimport * as React from \"react\";\nimport { Type, types } from \"./data\";\nimport { cssType } from \"./cssType\";\n\nconst buttonInnerHeight = \"1.5rem\";\n\ninterface TypeSelectorProps {\n  onChange(types: Type[]): void;\n  value: Type[];\n}\n\nexport default function MultiTypeSelector({\n  onChange,\n  value,\n}: TypeSelectorProps) {\n  const styles = {\n    selected:\n      \"border-vibrant2 type-bg-dark no-box-shadow button-shadow SelectedFocus\",\n    normal: \"border1 bg1 fg1 button-bg button-shadow SimpleFocus\",\n  };\n  return (\n    <div className=\"MultiTypeSelector-Container\">\n      {types.map((type) => {\n        const isChecked = value.includes(type);\n        const style = isChecked ? styles.selected : styles.normal;\n        return (\n          <button\n            role=\"checkbox\"\n            aria-checked={isChecked ? \"true\" : \"false\"}\n            key={`type-${type}`}\n            className={classnames(\n              style,\n              \"db w-100\",\n              \"ba br1\",\n              \"pv1 ph2\",\n              \"f5 b\",\n              \"ttc\",\n              \"SimpleFocus\",\n              \"active-squish\",\n              cssType(type)\n            )}\n            onClick={() => {\n              const types = new Set(value);\n              if (isChecked) {\n                types.delete(type);\n              } else {\n                types.add(type);\n              }\n              // Should we sort based on the type order on the page rather than\n              // alphabetical? I'll just stick with alphabetical for now.\n              onChange([...types].sort());\n            }}\n          >\n            <span className=\"flex flex-row items-center justify-center\">\n              <span\n                className={classnames(\n                  `type-${type} ba br1`,\n                  isChecked\n                    ? \"b--black type-bg-light\"\n                    : \"border-vibrant type-bg-dark\"\n                )}\n                style={{\n                  width: \"1rem\",\n                  height: \"1rem\",\n                }}\n              />\n\n              <span\n                className=\"tl pl2 pr1 flex-auto truncate\"\n                style={{ lineHeight: buttonInnerHeight }}\n              >\n                {type}\n              </span>\n              {isChecked ? <span aria-label=\"\"> &#10003;</span> : <span />}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CoverageType, Type, typesFromString } from \"./data\";\nimport * as Matchups from \"./Matchups\";\nimport MultiTypeSelector from \"./MultiTypeSelector\";\nimport { useSearch } from \"./useSearch\";\n\ninterface OffenseProps {\n  coverageTypes?: CoverageType[];\n  setCoverageTypes: (types: CoverageType[]) => void;\n  setOffenseParams: (params: string) => void;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport default function ScreenOffense({\n  coverageTypes,\n  setCoverageTypes,\n  setOffenseParams,\n  fallbackCoverageTypes,\n  isLoading,\n}: OffenseProps) {\n  const search = useSearch();\n  const history = useHistory();\n  const offenseTypes = typesFromString(search.get(\"types\") || \"\");\n\n  function createParams(types: Type[]): string {\n    const params = new URLSearchParams();\n    if (types.length > 0) {\n      params.set(\"types\", types.join(\" \"));\n    }\n    return \"?\" + params;\n  }\n\n  const updateOffenseTypes = (types: Type[]) => {\n    history.replace({ search: createParams(types) });\n  };\n\n  const params = createParams(offenseTypes);\n  React.useEffect(() => {\n    setOffenseParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  const classH2 = \"tc f5 mv3\";\n  return (\n    <main className=\"ph3 pt1 pb4 content-wide center\">\n      <div className=\"dib w-50-ns w-100 v-top\">\n        <h2 className={classH2}>Choose Types</h2>\n        <MultiTypeSelector value={offenseTypes} onChange={updateOffenseTypes} />\n      </div>\n      <div className=\"dib w-50-ns w-100 v-top pl3-ns\">\n        <hr className=\"dn-ns subtle-hr mv4\" />\n        <Matchups.Offense\n          coverageTypes={coverageTypes}\n          setCoverageTypes={setCoverageTypes}\n          types={offenseTypes}\n          fallbackCoverageTypes={fallbackCoverageTypes}\n          isLoading={isLoading}\n        />\n      </div>\n    </main>\n  );\n}\n","export const PUBLIC_PATH = new URL(\n  import.meta.env.BASE_URL,\n  window.location.href\n).href;\n","import classnames from \"classnames\";\nimport * as React from \"react\";\nimport { Link, LinkProps } from \"react-router-dom\";\n\ninterface LinkButtonProps extends LinkProps {\n  disabled?: boolean;\n}\n\nexport function LinkButton({\n  disabled = false,\n  to,\n  className,\n  ...props\n}: LinkButtonProps) {\n  if (disabled) {\n    // React Router <Link> requires the `to` prop, but rendering an <a> without\n    // an `href` works better for \"disabling\" a link\n    return (\n      <a\n        {...props}\n        className={classnames(\n          className,\n          baseClasses,\n          \"border3 fg4 bg-transparent no-pointer\"\n        )}\n      />\n    );\n  }\n  return (\n    <Link\n      {...props}\n      to={to}\n      tabIndex={0}\n      onClick={props.onClick}\n      className={classnames(\n        className,\n        baseClasses,\n        \"border1 button-shadow button-bg button-bg-hover color-inherit active-squish\"\n      )}\n    />\n  );\n}\n\nconst baseClasses = classnames(\n  \"no-underline\",\n  \"db\",\n  \"ba br2 pv1 ph2\",\n  \"b f5\",\n  \"SimpleFocus\"\n);\n","import classnames from \"classnames\";\nimport * as React from \"react\";\nimport { LinkButton } from \"./LinkButton\";\n\nenum Location {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n}\n\ninterface PageSelectorProps {\n  numPages: number;\n  pageItems: any[];\n  location: Location;\n  currentPage: number;\n  urlForPage: (page: number) => string;\n  hasPrev: boolean;\n  hasNext: boolean;\n}\n\nfunction PageSelector({\n  numPages,\n  pageItems,\n  location,\n  currentPage,\n  urlForPage,\n  hasPrev,\n  hasNext,\n}: PageSelectorProps) {\n  // Attempt to stay anchored to the top or bottom of the page when using\n  // pagination buttons to avoid the screen jumping around and stuff\n  const [scrollTo, setScrollTo] = React.useState<Location | undefined>(\n    undefined\n  );\n\n  React.useLayoutEffect(() => {\n    if (scrollTo === Location.TOP) {\n      window.scrollTo(0, 0);\n    } else if (scrollTo === Location.BOTTOM) {\n      window.scrollTo(0, document.body.scrollHeight);\n    }\n    setScrollTo(undefined);\n  }, [scrollTo]);\n\n  return (\n    <div\n      className={classnames(\n        \"items-center mv3\",\n        pageItems.length === 0 ? \"dn\" : \"flex\"\n      )}\n    >\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasPrev}\n        to={urlForPage(0)}\n        aria-label=\"First\"\n      >\n        &laquo;\n      </LinkButton>\n      <div className=\"pr1\" />\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasPrev}\n        to={urlForPage(currentPage - 1)}\n        aria-label=\"Previous\"\n      >\n        <span role=\"presentation\">&lsaquo; </span>Prev\n      </LinkButton>\n      <div className=\"flex-auto tc b f5 tabular-nums\">\n        {(currentPage + 1).toString().padStart(numPages.toString().length, \"0\")}\n        {\" / \"}\n        {numPages}\n      </div>\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasNext}\n        to={urlForPage(currentPage + 1)}\n        aria-label=\"Next\"\n      >\n        Next<span role=\"presentation\"> &rsaquo;</span>\n      </LinkButton>\n      <div className=\"pr1\" />\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasNext}\n        to={urlForPage(numPages - 1)}\n        aria-label=\"Last\"\n      >\n        &raquo;\n      </LinkButton>\n    </div>\n  );\n}\n\ninterface PaginatorProps<T> {\n  urlForPage: (page: number) => string;\n  currentPage: number;\n  pageSize: number;\n  emptyState: any;\n  items: T[];\n  renderPage: (items: T[]) => any;\n}\n\nexport default function Paginator<T>({\n  urlForPage,\n  currentPage,\n  pageSize,\n  emptyState,\n  items,\n  renderPage,\n}: PaginatorProps<T>) {\n  const numPages = Math.ceil(items.length / pageSize);\n  const hasPrev = currentPage > 0;\n  const hasNext = currentPage < numPages - 1;\n  const i = pageSize * currentPage;\n  const pageItems = items.slice(i, i + pageSize);\n  return (\n    <div>\n      <PageSelector\n        location={Location.TOP}\n        numPages={numPages}\n        pageItems={pageItems}\n        hasPrev={hasPrev}\n        hasNext={hasNext}\n        currentPage={currentPage}\n        urlForPage={urlForPage}\n      />\n      {pageItems.length === 0 ? emptyState : renderPage(pageItems)}\n      <PageSelector\n        location={Location.BOTTOM}\n        numPages={numPages}\n        pageItems={pageItems}\n        hasPrev={hasPrev}\n        hasNext={hasNext}\n        currentPage={currentPage}\n        urlForPage={urlForPage}\n      />\n    </div>\n  );\n}\n","export function pickTranslation(obj: Record<string, string>): string {\n  // Browsers typically only include a region code after the language, but\n  // PokéAPI tells us the script instead. Map the region codes to script codes\n  // for Simplified vs Traditional Chinese\n  const languages = navigator.languages\n    .map((s) => s.toLowerCase())\n    .map((s) => {\n      if (s === \"zh-tw\" || s === \"zh-hk\" || s === \"zh-mo\") {\n        return \"zh-Hant\";\n      }\n      if (s === \"zh-cn\" || s === \"zh-sg\") {\n        return \"zh-Hans\";\n      }\n      // Remove the region code because we don't support it for other languages\n      return s.split(\"-\")[0];\n    });\n  for (const lang of languages) {\n    if (lang in obj) {\n      return obj[lang];\n    }\n  }\n  return obj.en;\n}\n","import classnames from \"classnames\";\nimport * as React from \"react\";\nimport { PUBLIC_PATH } from \"./settings\";\n\ninterface SearchProps {\n  updateSearch: (search: string) => void;\n  search: string;\n}\n\nfunction preloadImage(src: string): void {\n  new Image().src = src;\n}\n\npreloadImage(\"/svg/search.svg\");\npreloadImage(\"/svg/clear.svg\");\n\nexport default function Search({ updateSearch, search }: SearchProps) {\n  const ref = React.useRef<HTMLInputElement>(null);\n  const iconSize = 24;\n  const inputHeight = 36;\n  return (\n    <div className=\"relative mv3\">\n      <img\n        src={`${PUBLIC_PATH}svg/search.svg`}\n        width={iconSize}\n        height={iconSize}\n        role=\"presentation\"\n        className=\"o-50 absolute dark--invert\"\n        style={{ left: 10, top: 8 }}\n      />\n      <input\n        aria-label=\"Search by name, number, or types\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        inputMode=\"search\"\n        autoCapitalize=\"none\"\n        className={classnames(\n          \"f5 w-100 border-box\",\n          \"pv2\",\n          \"SimpleFocus\",\n          \"inset-shadow\",\n          \"br-pill ba\",\n          \"bg1\",\n          \"fg1\",\n          \"border1\"\n        )}\n        style={{ paddingLeft: 40, paddingRight: 40, height: inputHeight }}\n        value={search}\n        onChange={(event) => {\n          updateSearch(event.target.value);\n        }}\n        ref={ref}\n      />\n      <img\n        src={`${PUBLIC_PATH}svg/clear.svg`}\n        width={iconSize}\n        height={iconSize}\n        role=\"presentation\"\n        onClick={() => {\n          updateSearch(\"\");\n          if (ref.current) {\n            ref.current.focus();\n          }\n        }}\n        className={classnames(\"o-50 absolute dark--invert\", {\n          dn: search === \"\",\n        })}\n        style={{ right: 6, top: 6 }}\n      />\n    </div>\n  );\n}\n","import classnames from \"classnames\";\nimport * as React from \"react\";\nimport { Type } from \"./data\";\nimport { cssType } from \"./cssType\";\n\nexport interface StatBarProps {\n  value: number;\n  max: number;\n  type: Type;\n}\n\nexport default function StatBar({ value, max, type }: StatBarProps) {\n  return (\n    <div className=\"flex h1 w-100 Bar-Container\">\n      <div\n        style={{\n          width: (value / max) * 100 + \"%\",\n          background: \"var(--type-color-2)\",\n        }}\n        className={classnames(cssType(type), \"Bar-Fill\")}\n      ></div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { Pokemon, Type } from \"./data\";\nimport StatBar from \"./StatBar\";\n\nconst STAT_MAX = 255;\n\nexport interface StatsTableProps {\n  pokemon: Pokemon;\n}\n\nexport default function StatsTable({ pokemon }: StatsTableProps) {\n  const { hp, attack, defense, spAttack, spDefense, speed } = pokemon;\n  return (\n    <div className=\"StatsTable tabular-nums\">\n      <div className=\"b tl\">HP</div>\n      <div className=\"tr ph2\">{hp}</div>\n      <StatBar max={STAT_MAX} value={hp} type={Type.FIGHTING} />\n\n      <div className=\"b tl\">Attack</div>\n      <div className=\"tr ph2\">{attack}</div>\n      <StatBar max={STAT_MAX} value={attack} type={Type.FIRE} />\n\n      <div className=\"b tl\">Defense</div>\n      <div className=\"tr ph2\">{defense}</div>\n      <StatBar max={STAT_MAX} value={defense} type={Type.ELECTRIC} />\n\n      <div className=\"b tl\">Sp. Atk.</div>\n      <div className=\"tr ph2\">{spAttack}</div>\n      <StatBar max={STAT_MAX} value={spAttack} type={Type.GRASS} />\n\n      <div className=\"b tl\">Sp. Def.</div>\n      <div className=\"tr ph2\">{spDefense}</div>\n      <StatBar max={STAT_MAX} value={spDefense} type={Type.WATER} />\n\n      <div className=\"b tl\">Speed</div>\n      <div className=\"tr ph2\">{speed}</div>\n      <StatBar max={STAT_MAX} value={speed} type={Type.FAIRY} />\n\n      <div className=\"b tl\">Total</div>\n      <div className=\"tr ph2\" style={{ height: 26 }}>\n        {hp + attack + defense + spAttack + spDefense + speed}\n      </div>\n      <div />\n    </div>\n  );\n}\n","import classnames from \"classnames\";\nimport matchSorter from \"match-sorter\";\nimport * as React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CoverageType, Pokemon, Type, typesOrNoneFromString } from \"./data\";\nimport { getImage } from \"./getImage\";\nimport Paginator from \"./Paginator\";\nimport { pickTranslation } from \"./pickTranslation\";\nimport Search from \"./Search\";\nimport StatsTable from \"./StatsTable\";\nimport { useSearch } from \"./useSearch\";\nimport { useDebounce } from \"use-debounce\";\nimport { cssType } from \"./cssType\";\nimport * as Matchups from \"./Matchups\";\n\nconst PAGE_SIZE = 20;\nconst nbsp = \"\\u00a0\";\n\ninterface MonsterTypeProps {\n  type: Type;\n  index: number;\n}\n\nfunction MonsterType({ type, index }: MonsterTypeProps) {\n  return (\n    <div\n      className={classnames(\n        cssType(type),\n        \"type-bg-dark\",\n        \"ttc tc flex\",\n        \"lh-title b\",\n        \"br-pill ba border-vibrant f6\",\n        { ml1: index > 0 }\n      )}\n      style={{ padding: 2 }}\n    >\n      <div className=\"bg-black-40 white br-pill ba b--black-10 ph2\">{type}</div>\n    </div>\n  );\n}\n\ninterface MonsterProps {\n  pokemon: Pokemon;\n  fallbackCoverageTypes: CoverageType[];\n}\n\nfunction Monster({ pokemon, fallbackCoverageTypes }: MonsterProps) {\n  const displayNumber = \"#\" + String(pokemon.number).padStart(3, \"0\");\n  const params = new URLSearchParams({ types: pokemon.types.join(\" \") });\n  const speciesName = pickTranslation(pokemon.speciesNames);\n  const formName = pickTranslation(pokemon.formNames);\n  return (\n    <div className={classnames(\"fg1 pv3\", \"flex-ns items-center\", \"Monster\")}>\n      <div className=\"flex flex-column h-100\">\n        <div className=\"flex flex-column pa3 br4 bg1 flex ba border3 h-100\">\n          <div className=\"flex items-center\">\n            <h2 className=\"mv0 f4\">{speciesName}</h2>\n            <div className=\"ph1 flex-auto\" />\n            <div className=\"fg3 mv0 tabular-nums f5\">{displayNumber}</div>\n          </div>\n          <div className=\"nv2 fg3 f5\">{formName || nbsp}</div>\n\n          <div className=\"pv3 flex justify-center\">\n            <img\n              src={getImage(pokemon.id)}\n              role=\"presentation\"\n              alt=\"\"\n              className=\"db img-crisp\"\n              width={96}\n              height={96}\n            />\n          </div>\n\n          <div className=\"pt2 flex justify-end\">\n            {pokemon.types.map((t, i) => (\n              <MonsterType key={i} type={t} index={i} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-column\">\n        <StatsTable pokemon={pokemon} />\n        <Matchups.Defense\n          type1={pokemon.types[0]}\n          type2={pokemon.types[1] ?? Type.NONE}\n          fallbackCoverageTypes={fallbackCoverageTypes}\n          noId={true}\n        />\n        <div className=\"pt2 flex justify-end\">\n          <a\n            aria-label={`Bulbapedia page for ${speciesName}`}\n            className=\"underline fg-link OutlineFocus\"\n            href={pokemon.bulbapediaURL}\n          >\n            Bulbapedia\n          </a>\n          <span aria-hidden=\"true\" className=\"o-50\">\n            &nbsp;&bull;&nbsp;\n          </span>\n          <Link\n            aria-label={`Offense for ${speciesName} (${formName})`}\n            className=\"underline fg-link OutlineFocus\"\n            to={`/offense/?${params}#matchup-offense`}\n          >\n            Offense\n          </Link>\n          <span aria-hidden=\"true\" className=\"o-50\">\n            &nbsp;&bull;&nbsp;\n          </span>\n          <Link\n            aria-label={`Defense for ${speciesName} (${formName})`}\n            className=\"underline fg-link OutlineFocus\"\n            to={`/defense/?${params}#matchup-defense`}\n          >\n            Defense\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface DexProps {\n  allPokemon: Pokemon[];\n  setPokedexParams: (params: string) => void;\n  isLoading: boolean;\n  fallbackCoverageTypes: CoverageType[];\n}\n\nexport default function ScreenPokedex({\n  allPokemon,\n  setPokedexParams,\n  isLoading,\n  fallbackCoverageTypes,\n}: DexProps) {\n  const search = useSearch();\n  const history = useHistory();\n  const query = search.get(\"q\") || \"\";\n  const [debouncedQuery] = useDebounce(query, 500);\n  const page = Number(search.get(\"page\") || 1) - 1;\n\n  const searchablePkmn = React.useMemo(() => {\n    return allPokemon.map((p) => {\n      return {\n        ...p,\n        speciesName: pickTranslation(p.speciesNames),\n        formName: pickTranslation(p.formNames),\n      };\n    });\n  }, [allPokemon]);\n\n  const pkmn = React.useMemo(() => {\n    const s = debouncedQuery.trim();\n    if (/^[0-9]+$/.test(s)) {\n      const number = Number(s);\n      return searchablePkmn.filter((p) => p.number === number);\n    }\n    const types = typesOrNoneFromString(s);\n    if (types.length > 0) {\n      return searchablePkmn.filter((p) => {\n        if (types.length === 1) {\n          return p.types[0] === types[0] || p.types[1] === types[0];\n        }\n        if (types.length === 2 && types[1] === Type.NONE) {\n          return p.types.length === 1 && p.types[0] === types[0];\n        }\n        return (\n          p.types.slice().sort().join(\" \") === types.slice().sort().join(\" \")\n        );\n      });\n    }\n    return matchSorter(searchablePkmn, s, {\n      keys: [\"speciesName\", \"formName\", \"number\"],\n    });\n  }, [debouncedQuery, searchablePkmn]);\n\n  function createParams(newQuery: string, newPage: number): string {\n    const params = new URLSearchParams();\n    if (newQuery) {\n      params.set(\"q\", newQuery);\n    }\n    if (Number(newPage) > 0) {\n      params.set(\"page\", String(newPage + 1));\n    }\n    return \"?\" + params;\n  }\n\n  function update(newQuery: string, newPage: number) {\n    const params = createParams(newQuery, newPage);\n    history.replace({ search: params });\n  }\n\n  const params = createParams(query, page);\n  React.useEffect(() => {\n    setPokedexParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  return (\n    <main className=\"ph3 mt3 center content-wide\">\n      <Search\n        search={query}\n        updateSearch={(newQuery) => {\n          update(newQuery, 0);\n        }}\n      />\n      <div className=\"flex justify-between ph2 nt2 pb3 bb border3 f6\">\n        <span className=\"fg3\" aria-hidden=\"true\">\n          Search by name, number, or types\n        </span>\n        <Link to=\"/pokedex/help/\" className=\"underline fg-link OutlineFocus\">\n          Help\n        </Link>\n      </div>\n      {isLoading ? (\n        <div className=\"Spinner center mt4 f2\" />\n      ) : (\n        <Paginator\n          currentPage={page}\n          urlForPage={(newPage) => {\n            return createParams(query, newPage);\n          }}\n          pageSize={PAGE_SIZE}\n          emptyState={<p className=\"fg4 f4 b tc m0\">No Pokémon found</p>}\n          items={pkmn}\n          renderPage={(page) =>\n            page.map((pokemon) => (\n              <Monster\n                key={pokemon.id}\n                pokemon={pokemon}\n                fallbackCoverageTypes={fallbackCoverageTypes}\n              />\n            ))\n          }\n        />\n      )}\n    </main>\n  );\n}\n","import { PUBLIC_PATH } from \"./settings\";\n\nexport function getImage(id: string): string {\n  return `${PUBLIC_PATH}img/${id}.png`;\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface ScreenPokdexHelpProps {\n  pokedexParams: string;\n}\n\nexport default function ScreenPokdexHelp({\n  pokedexParams,\n}: ScreenPokdexHelpProps) {\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f4\">Search by name</h2>\n      <p>\n        You can search for a Pokémon by name. If you only remember part of the\n        Pokémon&apos;s name, It can still probably find it for you. It\n        can&apos;t deal with typos right now though.\n      </p>\n      <h2 className=\"lh-title f4\">Search by number</h2>\n      <p>\n        Search by national dex number. If you want Bulbsaur, just type <i>1</i>,\n        not <i>#001</i>.\n      </p>\n      <h2 className=\"lh-title f4\">Search by type</h2>\n      <p>Here are a few examples of how to seach by type.</p>\n      <ul className=\"pl3\">\n        <li>\n          <code className=\"dib br2 ph2 bg3\">fire</code>\n          <p>\n            Search for Pokémon that have a fire as either of their types in any\n            form (e.g. Charmander, Charizard, Rotom).\n          </p>\n        </li>\n        <li>\n          <code className=\"dib br2 ph2 bg3\">water flying</code>\n          <p>\n            Search for Pokémon that are either water/flying (e.g. Gyarados) or\n            flying/water (e.g. Cramorant).\n          </p>\n        </li>\n        <li>\n          <code className=\"dib br2 ph2 bg3\">grass none</code>\n          <p>\n            Search for Pokémon that are only grass type, no 2nd type (e.g.\n            Tangela, Chikorita).\n          </p>\n        </li>\n      </ul>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <Link\n          to={`/pokedex/${pokedexParams}`}\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Back to Pokédex\n        </Link>\n      </p>\n    </main>\n  );\n}\n","import classnames from \"classnames\";\nimport { closest } from \"fastest-levenshtein\";\nimport Papa from \"papaparse\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CoverageType, objectToCoverageType, stringToType, Type } from \"./data\";\nimport { pickFile } from \"./pickFile\";\nimport { saveFile } from \"./saveFile\";\n\nconst buttonClasses = classnames(\n  \"no-underline\",\n  \"db\",\n  \"ba br2 pv1 ph2\",\n  \"b f5\",\n  \"SimpleFocus\",\n  \"active-squish\",\n  \"border1 button-shadow button-bg button-bg-hover color-inherit\"\n);\n\ninterface WeaknessCoverageProps {\n  setCoverageTypes: (types: CoverageType[]) => void;\n  offenseParams: string;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport default function ScreenWeaknessCoverage({\n  setCoverageTypes,\n  offenseParams,\n  fallbackCoverageTypes,\n  isLoading,\n}: WeaknessCoverageProps) {\n  const [lastUpdated, setLastUpdated] = React.useState(new Date());\n  const [statusText, setStatusText] = React.useState(\"\");\n  const statusRef = React.useRef<HTMLParagraphElement | null>(null);\n\n  React.useEffect(() => {\n    if (statusRef.current instanceof HTMLElement) {\n      statusRef.current.scrollIntoView();\n    }\n  }, [lastUpdated]);\n\n  function saveCSV() {\n    const csv = Papa.unparse(\n      {\n        fields: [\"Number\", \"Name\", \"Type 1\", \"Type 2\"],\n        data: fallbackCoverageTypes.map((t) => {\n          const type2 = t.type2 === Type.NONE ? \"\" : t.type2;\n          return [t.number, t.name, t.type1, type2];\n        }),\n      },\n      {\n        header: true,\n        skipEmptyLines: true,\n      }\n    );\n    saveFile({\n      filename: \"pkmn.help type coverage.csv\",\n      type: \"text/csv\",\n      data: csv,\n    });\n    setStatusText(\"Exported default Pokémon forms\");\n    setLastUpdated(new Date());\n  }\n\n  async function loadCSV() {\n    const file = await pickFile({ accept: \".csv\" });\n    if (!file) {\n      return;\n    }\n    const text = await file.text();\n    const result = Papa.parse(text, {\n      header: true,\n      skipEmptyLines: true,\n      transformHeader: (header) => {\n        return closest(header.toLowerCase().replace(/[a-z0-9]/i, \"\"), [\n          \"number\",\n          \"name\",\n          \"type1\",\n          \"type2\",\n        ]);\n      },\n      transform: (value, field) => {\n        if (field === \"type1\") {\n          return stringToType(value, Type.NORMAL);\n        }\n        if (field === \"type2\") {\n          return stringToType(value, Type.NONE);\n        }\n        return value;\n      },\n    });\n    if (result.errors.length > 0) {\n      alert(\"Error loading CSV. Don't change header names.\");\n      return;\n    }\n    const newCoverageTypes = result.data.map(objectToCoverageType);\n    setStatusText(\n      `Imported ${newCoverageTypes.length} Pokémon forms from \"${file.name}\"`\n    );\n    setCoverageTypes(newCoverageTypes);\n    setLastUpdated(new Date());\n  }\n\n  function loadDefault() {\n    setStatusText(\"Loaded default Pokémon forms\");\n    setCoverageTypes(fallbackCoverageTypes);\n    setLastUpdated(new Date());\n  }\n\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f5\">Weakness Coverage</h2>\n      <p>\n        Import/export custom Pokédex CSV files to see weakness coverage for\n        different Pokémon. Create a custom CSV file with just the OU tier\n        Pokémon, or even create your own Pokémon from scratch.\n      </p>\n      <p>\n        CSV data is loaded by column header name, not column order, so you can\n        add or re-order columns if you want (e.g. add a &quot;tier&quot; column,\n        or a &quot;notes&quot; column).\n      </p>\n      <p>\n        CSV files can be edited with Google Sheets, Microsoft Excel, OpenOffice,\n        LibreOffice, Notepad, and more.\n      </p>\n      {isLoading ? (\n        <div className=\"Spinner center mt4 f2\" />\n      ) : (\n        <div className=\"pt2 ButtonGrid\">\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              saveCSV();\n            }}\n          >\n            Export\n          </button>\n          <span>Export the default Pokédex to a CSV file</span>\n\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              loadCSV();\n            }}\n          >\n            Import\n          </button>\n          <span>Import an edited Pokédex CSV file</span>\n\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              loadDefault();\n            }}\n          >\n            Reset\n          </button>\n          <span>Reset to the default Pokédex</span>\n        </div>\n      )}\n      <p className=\"f4 b\" hidden={!statusText} ref={statusRef}>\n        {statusText}\n      </p>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <Link\n          to={`/offense/${offenseParams}`}\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Back to offense\n        </Link>\n      </p>\n    </main>\n  );\n}\n","export function saveFile({\n  filename,\n  type,\n  data,\n}: {\n  filename: string;\n  type: string;\n  data: string;\n}): void {\n  const file = new File([data], filename, { type });\n  const url = URL.createObjectURL(file);\n  const a = document.createElement(\"a\");\n  a.download = filename;\n  a.href = url;\n  a.click();\n  URL.revokeObjectURL(url);\n}\n","export async function pickFile({\n  accept,\n}: {\n  accept: string;\n}): Promise<File | undefined> {\n  return new Promise((resolve) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = accept;\n    input.onchange = () => {\n      resolve(input.files?.[0]);\n    };\n    input.click();\n  });\n}\n","import classnames from \"classnames\";\nimport * as React from \"react\";\nimport { Link, NavLink, Redirect, Route, Switch } from \"react-router-dom\";\nimport { CoverageType, Pokemon, Type } from \"./data\";\nimport ScreenDefense from \"./ScreenDefense\";\nimport ScreenInfo from \"./ScreenInfo\";\nimport ScreenOffense from \"./ScreenOffense\";\nimport ScreenPokedex from \"./ScreenPokedex\";\nimport ScreenPokedexHelp from \"./ScreenPokedexHelp\";\nimport ScreenWeaknessCoverage from \"./ScreenWeaknessCoverage\";\nimport { PUBLIC_PATH } from \"./settings\";\n\nconst tabClass = classnames([\n  \"no-underline\",\n  \"pv2 ph2 f5\",\n  \"TabFocus\",\n  \"b bn\",\n  \"br--top br2\",\n  \"bg-transparent\",\n  \"fg3 bottom-border-thick\",\n]);\n\nconst tabClassActive = classnames([\"fg1 bottom-border-thick-current\"]);\n\nexport default function App() {\n  const [defenseParams, setDefenseParams] = React.useState(\"\");\n  const [offenseParams, setOffenseParams] = React.useState(\"\");\n  const [pokedexParams, setPokedexParams] = React.useState(\"\");\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [coverageTypes, setCoverageTypes] = React.useState<CoverageType[]>([]);\n  const [fallbackCoverageTypes, setFallbackCoverageTypes] = React.useState<\n    CoverageType[]\n  >([]);\n  const [AllPokemon, setAllPokemon] = React.useState<Pokemon[]>([]);\n  React.useEffect(() => {\n    async function load() {\n      const bigURL = new URL(\"data-pkmn.json\", PUBLIC_PATH).href;\n      const resp = await fetch(bigURL);\n      const allPokemon: Pokemon[] = await resp.json();\n      const fallbackCoverageTypes = allPokemon.map<CoverageType>((pkmn) => {\n        return {\n          number: String(pkmn.number),\n          name: pkmn.name,\n          type1: pkmn.types[0],\n          type2: pkmn.types[1] ?? Type.NONE,\n        };\n      });\n      setIsLoading(false);\n      setCoverageTypes(fallbackCoverageTypes);\n      setFallbackCoverageTypes(fallbackCoverageTypes);\n      setAllPokemon(allPokemon);\n    }\n    load();\n  }, []);\n  return (\n    <div className=\"flex-auto\">\n      <h1 className=\"f3-ns f4 tc relative white PokeballHeader\">\n        <Link to=\"/\" className=\"no-underline white OutlineFocus\">\n          Pokémon Type Calculator\n        </Link>\n      </h1>\n      <nav\n        className={classnames([\n          \"flex justify-center\",\n          \"bg1\",\n          \"bb border2 TabBarShadow\",\n          \"pt3\",\n        ])}\n      >\n        <NavLink\n          className={tabClass}\n          activeClassName={tabClassActive}\n          to={`/offense/${offenseParams}`}\n        >\n          Offense\n        </NavLink>\n        <NavLink\n          className={tabClass}\n          activeClassName={tabClassActive}\n          to={`/defense/${defenseParams}`}\n        >\n          Defense\n        </NavLink>\n        <NavLink\n          className={tabClass}\n          activeClassName={tabClassActive}\n          to={`/pokedex/${pokedexParams}`}\n        >\n          Pokédex\n        </NavLink>\n        <NavLink\n          className={tabClass}\n          activeClassName={tabClassActive}\n          to=\"/info/\"\n        >\n          Info\n        </NavLink>\n      </nav>\n      <Switch>\n        <Route\n          exact\n          path=\"/offense/coverage/\"\n          render={() => (\n            <ScreenWeaknessCoverage\n              setCoverageTypes={setCoverageTypes}\n              offenseParams={offenseParams}\n              fallbackCoverageTypes={fallbackCoverageTypes}\n              isLoading={isLoading}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/offense/\"\n          render={() => (\n            <ScreenOffense\n              coverageTypes={coverageTypes}\n              setCoverageTypes={setCoverageTypes}\n              setOffenseParams={setOffenseParams}\n              fallbackCoverageTypes={fallbackCoverageTypes}\n              isLoading={isLoading}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/defense/\"\n          render={() => (\n            <ScreenDefense\n              setDefenseParams={setDefenseParams}\n              fallbackCoverageTypes={fallbackCoverageTypes}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/pokedex/help/\"\n          render={() => <ScreenPokedexHelp pokedexParams={pokedexParams} />}\n        />\n        <Route\n          exact\n          path=\"/pokedex/\"\n          render={() => (\n            <ScreenPokedex\n              setPokedexParams={setPokedexParams}\n              allPokemon={AllPokemon}\n              isLoading={isLoading}\n              fallbackCoverageTypes={fallbackCoverageTypes}\n            />\n          )}\n        />\n        <Route exact path=\"/info/\" component={ScreenInfo} />\n        <Redirect to=\"/defense/\" />\n      </Switch>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\ninterface ErrorBoundaryProps {\n  render: (error: Error) => React.ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  error?: Error;\n}\n\nexport default class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return this.props.render(this.state.error);\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\n\ntype ScreenErrorProps = {\n  error: Error;\n};\n\nconst ScreenError: React.FC<ScreenErrorProps> = ({ error }) => {\n  return (\n    <div className=\"sans-serif ph4 content-narrow f4 center fg2 lh-copy\">\n      <h1>pkmn.help: Error</h1>\n      <p>\n        Please send an email to{\" \"}\n        <a href=\"mailto:brian@wavebeem.com\" className=\"fg-link\">\n          brian@wavebeem.com\n        </a>{\" \"}\n        describing how to reproduce this error, and include the following error\n        message:\n      </p>\n      <pre className=\"f5 bg1 pa2 br2 ba border2 overflow-x-auto\">\n        {error.message}\n      </pre>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <a href=\"/\" className=\"f3 fg-link\">\n          Back to pkmn.help\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default ScreenError;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"tachyons\";\nimport App from \"./App\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport ScreenError from \"./ScreenError\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary render={(error) => <ScreenError error={error} />}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.querySelector(\"#app\")\n);\n"],"names":["Type","Type2","str","types","some","t","split","filter","isType","typesOrNone","NORMAL","FIGHTING","FLYING","POISON","GROUND","ROCK","BUG","GHOST","STEEL","FIRE","WATER","GRASS","ELECTRIC","PSYCHIC","ICE","DRAGON","DARK","FAIRY","NONE","string","fallback","toLowerCase","replace","closest","Effectiveness","Effectiveness2","t1","t2","obj","ct","number","name","type1","stringToType","type2","pairs","flatMap","row","i","map","data","j","keyForTypes","table","Object","fromEntries","ta1","ta2","tb","x3","Error","constructor","type","effectiveness","matchups","typesFor","effectivenes","this","m","offenseTypes","length","Matchup","effs","offense","matchupFor","max","Math","GroupedMatchups","eff","value","className","style","width","background","DexCoverage","coverageTypes","isLoading","count","types2","REGULAR","total","percent","toFixed","PercentBar","classnames","cssType","margin","padding","title","Badge","key","kind","formatTitle","fallbackCoverageTypes","noId","id","Link","to","Section","QUADRUPLE","DOUBLE","HALF","QUARTER","ZERO","Matchups","x","defensiveMatchups","offensiveMatchups","onChange","includeNone","disabledTypes","theTypes","styles","isDisabled","includes","isSelected","style2","disabled","onClick","height","lineHeight","location","useLocation","URLSearchParams","search","setDefenseParams","fragment","hash","slice","element","document","getElementById","HTMLElement","scrollIntoView","useSearch","history","useHistory","typesFromString","get","params2","set","join","createParams","params","classH2","TypeSelector","Matchups.Defense","year","Date","getFullYear","href","isChecked","role","Set","delete","add","sort","setCoverageTypes","setOffenseParams","MultiTypeSelector","Matchups.Offense","PUBLIC_PATH","URL","window","_a","_b","props","__spreadProps","baseClasses","tabIndex","Location","Location2","numPages","pageItems","currentPage","urlForPage","hasPrev","hasNext","scrollTo","setScrollTo","React.useState","TOP","BOTTOM","body","scrollHeight","LinkButton","toString","padStart","pageSize","emptyState","items","renderPage","ceil","PageSelector","languages","navigator","s","lang","en","src","Image","updateSearch","ref","React.useRef","left","top","autoComplete","autoCorrect","inputMode","autoCapitalize","paddingLeft","paddingRight","event","target","current","focus","dn","right","preloadImage","pokemon","hp","attack","defense","spAttack","spDefense","speed","StatBar","index","ml1","displayNumber","String","speciesName","pickTranslation","speciesNames","formName","formNames","alt","MonsterType","StatsTable","bulbapediaURL","allPokemon","setPokedexParams","query","debouncedQuery","useDebounce","page","Number","searchablePkmn","React.useMemo","p","pkmn","trim","test","isTypeOrNone","matchSorter","keys","newQuery","newPage","Search","Paginator","page2","Monster","pokedexParams","buttonClasses","offenseParams","lastUpdated","setLastUpdated","statusText","setStatusText","statusRef","filename","file","File","url","createObjectURL","a","createElement","download","click","revokeObjectURL","Papa","unparse","fields","header","skipEmptyLines","accept","Promise","resolve","input","onchange","files","pickFile","text","result","parse","transformHeader","transform","field","errors","newCoverageTypes","objectToCoverageType","hidden","tabClass","tabClassActive","defenseParams","setIsLoading","setFallbackCoverageTypes","AllPokemon","setAllPokemon","bigURL","resp","fetch","json","fallbackCoverageTypes2","NavLink","activeClassName","Switch","Route","exact","path","render","ScreenWeaknessCoverage","ScreenOffense","ScreenDefense","ScreenPokedexHelp","ScreenPokedex","component","ScreenInfo","Redirect","React.Component","state","error","children","ScreenError","message","ReactDOM.render","React.StrictMode","ErrorBoundary","HashRouter","App","querySelector"],"mappings":"4iBAkBYA,EAAAC,EAsBZ,WAAgBC,UACPC,EAAMC,MAAMC,GAAMA,IAAMH,eAGDA,UACvBA,EAAII,MAAM,OAAOC,OAAOC,GAGjC,WAAsBN,UACbO,EAAYL,MAAMC,GAAMA,IAAMH,KA/B3BD,EAAAD,kBACD,oBACE,oBACF,kBACA,kBACA,gBACF,aACD,cACE,gBACA,eACD,eACC,gBACA,mBACG,qBACD,gBACJ,eACG,gBACF,eACC,eACD,aAmBIG,EAAQ,CACnBH,EAAKU,OACLV,EAAKW,SACLX,EAAKY,OACLZ,EAAKa,OACLb,EAAKc,OACLd,EAAKe,KACLf,EAAKgB,IACLhB,EAAKiB,MACLjB,EAAKkB,MACLlB,EAAKmB,KACLnB,EAAKoB,MACLpB,EAAKqB,MACLrB,EAAKsB,SACLtB,EAAKuB,QACLvB,EAAKwB,IACLxB,EAAKyB,OACLzB,EAAK0B,KACL1B,EAAK2B,OAGMlB,EAAc,IAAIN,EAAOH,EAAK4B,iBAEdC,EAAgBC,SAE5B,QADND,EAAOE,cAAcC,QAAQ,SAAU,KAEvCF,EAEFG,UAAQJ,EAAQpB,OAGbyB,EAAAC,GAAAA,EAAAD,uBACE,GAAZ,uBACS,GAAT,qBACU,GAAV,mBACO,IAAP,mBACU,KAAV,mBACO,GAAP,OAwBF,WAAqBE,EAAUC,UACtBD,EAAK,MAAQC,aAUeC,SAC7BC,EAAKD,QACJ,CACLE,OAAQD,EAAGC,QAAU,GACrBC,KAAMF,EAAGE,MAAQ,GACjBC,MAAOC,EAAaJ,EAAGG,OAAS,GAAI1C,EAAKU,QACzCkC,MAAOD,EAAaJ,EAAGK,OAAS,GAAI5C,EAAK4B,OAI7C,MAAMiB,EA1CU,CACd,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxD,CAAC,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,IAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,GAAK,GAAK,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACxD,CAAC,EAAG,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAChE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GACtD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,GAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,GAAK,EAAG,GAC1D,CAAC,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,GAAK,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,EAAG,GAClE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GACxD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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"}